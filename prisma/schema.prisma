// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int     @id @default(autoincrement())
  username String
  email    String 
  password String
  token    Int      @default(0)
  users   Json?
  roleId Int?
  adminId Int?
  isActive Int      @default(0)
  userIp   String?
  status Int?
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
}

model Menu{
  id Int @id @default(autoincrement())
  menuLableId String
  label String
  icon String
  link String
  status Int
  sequence Int
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
 
}

model SubMenu {
  id Int @id @default(autoincrement())
  submenuLableId String
  label String
  parentId String
  link String
  status Int
  menuId Int
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
  
}

model SubMenuAssign{
  id Int @id @default(autoincrement())
  menuId Int
  status Int
  subMenuId Int
  roleId Int
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
}

model Role {
  id Int @id @default(autoincrement())
  name String
  status Int
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
}

model RoleAssign{
  id Int @id @default(autoincrement())
  roleId Int
  userId Int
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
}

model Client {
  id Int @id @default(autoincrement())
  companyName String
  address String
  agreementDate String
  email String @unique
  contactNo String
  noOfUsers Int
  userIdDemo String
  userIdLive String
  password String
  startTime String
  endTime String
  roleId Int
  addedBy Int
  status Int
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
}

model AssignedData {
  id Int @id @default(autoincrement())
  url String
  userId Int
  status Int
  addedBy Int
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
}

model WebsiteData{
  id Int @id @default(autoincrement())
  urlId Int
  url String
  websiteStatus String
  companyLogo String?
  companyName String
  contactNo1 String?
  contactNo2 String?
  emailId1 String?
  emailId2 String?
  faxNo String?
  businessType String
  address String
  companyProfile String
  city String
  state String
  pinCode String
  country String
  userId Int
  username String
  status Int
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
}

model SubmittedData{
  id Int @id @default(autoincrement())
  token String
  formId Int
  userId Int
  status Int
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
}


model CheckForm{
  id Int @id @default(autoincrement())
  formId Int
  userId Int
  token String
  fieldName String
  status Int @default(1)
  correct Int
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
}

model Invoice{
  id Int @id @default(autoincrement())
  token String
  client String
  formRate Int
  noOfUsers Int
  totalForms Int
  correctFields Int
  incorrectFields Int
  totalAmount Float
  costPerField Float
  startDate String
  endDate String
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
}